AWSTemplateFormatVersion: 2010-09-09
# This template launches 3 spot instances with amazon linux image with custom data on them,instances launched on your existing vpc/subnets.
# Accepted parameters are as follows, AmazonLinux2LatestAmiId, EnvironmentName(ec2 name tag), SpotinstanceType1&2&3, VPC, IGW, PublicSubnet1&2&3
Parameters:
  AmazonLinux2LatestAmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  EnvironmentName:
    Type: String
    Default: Cad-SPOT-ASG-ELB-Stack
    Description: Name of ASG blueprint,appears as your ec2 instances name tag too
  Project:
    Type: String
    Default: Others
    Description: Project of ASG blueprint,appears as your ec2 instances name tag too
  ApplicationGroup:
    Type: String
    Default: NonSAP
    Description: ApplicationGroup of ASG blueprint,appears as your ec2 instances name tag too
  Application:
    Type: String
    Default: NonSAP
    Description: ApplicationGroup of ASG blueprint,appears as your ec2 instances name tag too
  Hostname:
    Type: String
    Default: CAIWTSTSPOTASG
    Description: Hostname of ASG blueprint,appears as your ec2 instances name tag too
  Name:
    Type: String
    Default: CAIWTSTSPOTASG
    Description: Name of ASG blueprint,appears as your ec2 instances name tag too
  EnvironmentType:
    Type: String
    Default: Test
    Description: EnvironmentType of ASG blueprint,appears as your ec2 instances name tag too
  BAUStatus:
    Type: String
    Default: NonLive
    Description: BAUStatus of ASG blueprint,appears as your ec2 instances name tag too
  Purpose:
    Type: String
    Default: Spot with ASG-ALB  POC
    Description: Purpose of ASG blueprint,appears as your ec2 instances name tag too
  Owner:
    Type: String
    Default: Cadent_EO_Cloud@hcl.com
    Description: Owner of ASG blueprint,appears as your ec2 instances name tag too
  ApplicationOwner:
    Type: String
    Default: envmgr
    Description: ApplicationOwner of ASG blueprint,appears as your ec2 instances name tag too
  OperatingSystem:
    Type: String
    Default: CentOS Linux 7.5
    Description: OperatingSystem of ASG blueprint,appears as your ec2 instances name tag too
  DateOfDeletion:
    Type: String
    Default: 03-03-2021
    Description: DateOfDeletion of ASG blueprint,appears as your ec2 instances name tag too
  OperatingHours:
    Type: String
    Default: ScheduledHours
    Description: OperatingHours of ASG blueprint,appears as your ec2 instances name tag too
  StartStopSchedule:
    Type: String
    Default: 24X7
    Description: StartStopSchedule of ASG blueprint,appears as your ec2 instances name tag too 
  Decommission:
    Type: String
    Default: BAUDecommission
    Description: StartStopSchedule of ASG blueprint,appears as your ec2 instances name tag too                      

  SpotInstanceType1:
    Type: String
    Default: t3.micro
    Description: Possible instance type to use for Spot
  SpotInstanceType2:
    Type: String
    Default: t2.micro
    Description: Possible instance type to use for Spot
  SpotInstanceType3:
    Type: String
    Default: t3.nano
    Description: Possible instance type to use for Spot
  VPC:
    Type: String
    Default: vpc-0163236d6fc984bd0
    Description: VPC for the workload to run
  InternetGateway:
    Type: String
    Default: igw-036304aefce47553b
    Description: VPC for the workload to run
  PublicSubnet1:
    Type: String
    Default: subnet-06ae1a36ecb85af4a
    Description: PublicSubnet1 for the workload to run
  PublicSubnet2:
    Type: String
    Default: subnet-01a3a02577388c3b5
    Description: PublicSubnet2 for the workload to run
  #PublicSubnet3:
    #Type: String
    #Default: subnet-0b13c51b3a29c013c
    #Description: PublicSubnet3 for the workload to run

Resources:
  spotBlueprintsEC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2008-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
  spotBlueprintsEC2Profile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: spotBlueprintsEC2Role
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value:
            Fn::Sub: ${EnvironmentName} Public Routes
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 10.204.0.0/16
      GatewayId:
        Ref: InternetGateway
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet2
  
  #PublicSubnet3RouteTableAssociation:
  #  Type: AWS::EC2::SubnetRouteTableAssociation
  #  Properties:
  #    RouteTableId:
  #      Ref: PublicRouteTable
  #    SubnetId:
  #      Ref: PublicSubnet3
  
  SampleWebAppAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      CapacityRebalance: true
      HealthCheckType: ELB
      HealthCheckGracePeriod: 300
      MinSize: "1"
      MaxSize: "3"
      DesiredCapacity: "1"
      VPCZoneIdentifier:
        - Ref: PublicSubnet1
        - Ref: PublicSubnet2
  #      - Ref: PublicSubnet3
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandAllocationStrategy: prioritized
          OnDemandBaseCapacity: 0
          OnDemandPercentageAboveBaseCapacity: 0
          SpotAllocationStrategy: capacity-optimized
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId:
              Ref: SampleWebAppLaunchTemplate
            Version:
              Fn::GetAtt:
                - SampleWebAppLaunchTemplate
                - DefaultVersionNumber
          Overrides:
            - InstanceType:
                Ref: SpotInstanceType1
            - InstanceType:
                Ref: SpotInstanceType2
            - InstanceType:
                Ref: SpotInstanceType3
            
      TargetGroupARNs:
        - Ref: SampleWebAppTargetGroup
      Tags:
        - Key: Name
          Value:
            Fn::Sub: ${EnvironmentName}
          PropagateAtLaunch: true
  SampleWebAppLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    
    Properties:
      LaunchTemplateData:
        ImageId:
          Ref: AmazonLinux2LatestAmiId
        SecurityGroupIds:
          - Ref: SampleWebAppEC2SecurityGroup
        UserData:
          Fn::Base64: >
            #!/bin/bash

            yum update -y

            amazon-linux-extras install epel -y

            yum -y install httpd jq  

            echo "Dear Cadent user! 

            echo "  "

            This instance-id is $(curl -s http://169.254.169.254/latest/meta-data/instance-id)
            echo "  "
            the instance type is $(curl -s http://169.254.169.254/latest/meta-data/instance-type)
            echo "  "
            this server is on Availability Zone $(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)" > /var/www/html/index.html

            service httpd start
        IamInstanceProfile:
          Name:
            Ref: spotBlueprintsEC2Profile
  SampleWebAppELBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for apache instances
      Tags:
        - Key: Name
          Value:
            Fn::Sub: ${EnvironmentName} Public Routes
        - Key: Project
          Value:
            Fn::Sub: ${Project} Public Routes
        - Key: Application
          Value:
            Fn::Sub: ${Application} Public Routes
        - Key: Purpose
          Value:
            Fn::Sub: ${Purpose} Public Routes
        - Key: BAUStatus
          Value:
            Fn::Sub: ${BAUStatus} Public Routes
        - Key: ApplicationOwner
          Value:
            Fn::Sub: ${ApplicationOwner} Public Routes
      SecurityGroupEgress:
        - CidrIp: 10.204.0.0/16
          IpProtocol: -1
      SecurityGroupIngress:
        - CidrIp: 10.204.0.0/16
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
      VpcId:
        Ref: VPC
  SampleWebAppEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for apache instances
      Tags:
        - Key: Name
          Value:
            Fn::Sub: ${EnvironmentName} Public Routes
        - Key: Project
          Value:
            Fn::Sub: ${Project} Public Routes
        - Key: Application
          Value:
            Fn::Sub: ${Application} Public Routes
        - Key: Purpose
          Value:
            Fn::Sub: ${Purpose} Public Routes
        - Key: BAUStatus
          Value:
            Fn::Sub: ${BAUStatus} Public Routes
        - Key: ApplicationOwner
          Value:
            Fn::Sub: ${ApplicationOwner} Public Routes
      SecurityGroupEgress:
        - CidrIp: 10.204.0.0/16
          IpProtocol: -1
      SecurityGroupIngress:
        - SourceSecurityGroupId:
            Ref: SampleWebAppELBSecurityGroup
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
      VpcId:
        Ref: VPC
  SampleWebAppLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      SecurityGroups:
        - Ref: SampleWebAppELBSecurityGroup
      Subnets:
        - Ref: PublicSubnet1
        - Ref: PublicSubnet2
  #      - Ref: PublicSubnet3
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: routing.http.drop_invalid_header_fields.enabled
          Value: "true"
      Tags:
        - Key: Name
          Value:
            Fn::Sub: ${EnvironmentName} Public Routes
        - Key: Project
          Value:
            Fn::Sub: ${Project} Public Routes
        - Key: Application
          Value:
            Fn::Sub: ${Application} Public Routes
        - Key: Purpose
          Value:
            Fn::Sub: ${Purpose} Public Routes
        - Key: BAUStatus
          Value:
            Fn::Sub: ${BAUStatus} Public Routes
        - Key: ApplicationOwner
          Value:
            Fn::Sub: ${ApplicationOwner} Public Routes
  SampleWebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup

    Properties:
      Port: "80"
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: "90"
        - Key: load_balancing.algorithm.type
          Value: least_outstanding_requests
      VpcId:
        Ref: VPC
  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn:
        Ref: SampleWebAppLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: SampleWebAppTargetGroup
